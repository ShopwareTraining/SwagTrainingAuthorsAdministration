(this.webpackJsonp=this.webpackJsonp||[]).push([["swag-training-authors-administration"],{"+kHe":function(e,t){e.exports='{% block author_form %}\n    <sw-page class="author-form">\n        <template slot="smart-bar-actions">\n            <sw-button :disabled="isLoading" @click="onCancel">\n                {{ $tc(\'authors.form.buttonCancel\') }}\n            </sw-button>\n\n            <sw-button-process\n                    class="authors-form__save-action"\n                    :isLoading="isLoading"\n                    v-model="isSaveSuccessful"\n                    :disabled="isLoading || !acl.can(\'authors.editor\')"\n                    variant="primary"\n                    @process-finish="saveFinish"\n                    @click.prevent="onSave">\n                {{ $tc(\'authors.form.buttonSave\') }}\n            </sw-button-process>\n        </template>\n\n        <sw-card-view slot="content">\n            <sw-card>\n                <h2>Author edit</h2>\n\n                <sw-field\n                        type="text"\n                        required\n                        :disabled="!acl.can(\'authors.editor\')"\n                        :label="$tc(\'authors.form.name\')"\n                        :placeholder="placeholder(author, \'name\', $tc(\'authors.form.name\'))"\n                        v-model="author.name">\n                </sw-field>\n\n                <sw-field\n                        type="text"\n                        required\n                        :disabled="!acl.can(\'authors.editor\')"\n                        :label="$tc(\'authors.form.description\')"\n                        :placeholder="placeholder(author, \'description\', $tc(\'authors.form.description\'))"\n                        v-model="author.description">\n                </sw-field>\n\n                <sw-field\n                        type="text"\n                        required\n                        :disabled="!acl.can(\'authors.editor\')"\n                        :label="$tc(\'authors.form.address\')"\n                        :placeholder="placeholder(author, \'address\', $tc(\'authors.form.address\'))"\n                        v-model="author.address">\n                </sw-field>\n            </sw-card>\n        </sw-card-view>\n    </sw-page>\n{% endblock %}\n'},FTGw:function(e,t,a){"use strict";a.r(t);var i=a("eprr"),n=a.n(i);a("YY/3");const{Component:r,Mixin:s}=Shopware,{Criteria:l}=Shopware.Data;r.register("author-listing-page",{template:n.a,inject:["repositoryFactory","acl"],mixins:[s.getByName("listing"),s.getByName("notification")],metaInfo:()=>({title:"Authors overview"}),data:()=>({authors:null,isLoading:!1}),computed:{authorRepository(){return this.repositoryFactory.create("author")}},createdComponent(){this.getList()},methods:{getCriteria(){const e=new l(this.page,this.limit);return this.term&&e.setTerm(this.term),e.addSorting(l.sort("name","ASC")),e},getList(){this.isLoading=!0,this.authorRepository.search(this.getCriteria(),Shopware.Context.api).then((e=>(this.authors=e,this.total=e.total,e))).finally((()=>{this.isLoading=!1}))},onInlineEditSave(e){e.save()},getGridColumns:()=>[{property:"name",label:"authors.listing.name",routerLink:"swag.training.authors.form",allowResize:!0,primary:!0},{property:"description",label:"authors.listing.description",allowResize:!0},{property:"address",label:"authors.listing.address",allowResize:!0}]}});var o=a("+kHe"),d=a.n(o);a("T+xm");const{Component:c,Mixin:p}=Shopware;c.register("author-form-page",{template:d.a,inject:["repositoryFactory","acl"],mixins:[p.getByName("notification"),p.getByName("placeholder")],metaInfo:()=>({title:"Authors form"}),data:()=>({author:{},isLoading:!1,isSaveSuccessful:!1}),computed:{identifier(){return this.placeholder(this.author,"name")},authorRepository(){return this.repositoryFactory.create("author")}},watch:{authorId(){this.authorId||this.createdComponent()}},created(){this.getAuthor()},methods:{getAuthor(){this.isLoading=!0,this.authorId||(this.authorId=this.$route.query.id,this.authorId||(this.authorId=this.$route.params.id),this.authorRepository.get(this.authorId,Shopware.Context.api).then((e=>{this.author=e,this.isLoading=!1})))},loadEntityData(){this.author=this.authorRepository.get(this.authorId,Shopware.Context.api).then((e=>{this.author=e}))},saveFinish(){this.isSaveSuccessful=!1},onSave(){return this.isSaveSuccessful=!1,this.isLoading=!0,this.authorRepository.save(this.author,Shopware.Context.api).then((()=>{this.isSaveSuccessful=!0,this.authorId||this.$router.push({name:"author.form",params:{id:this.author.id}}),this.authorRepository.get(this.author.id,Shopware.Context.api).then((e=>{this.author=e,this.isLoading=!1}))})).catch((()=>{this.createNotificationError({message:this.$tc("detail.form.notificationErrorMessage")}),this.isLoading=!1}))},onCancel(){this.$router.push({name:"author.index"})}}});const{Module:m}=Shopware;m.register("swag-training-authors",{type:"plugin",name:"authors",title:"authors.general.mainMenuItemGeneral",description:"authors.general.descriptionTextModule",version:"0.0.1",targetVersion:"0.0.1",color:"#FFCC00",icon:"default-device-dashboard",favicon:"icon-module-dashboard.png",routes:{index:{components:{default:"author-listing-page"},path:"index"},form:{components:{default:"author-form-page"},path:"form"}},navigation:[{id:"authors.listing",label:"authors.general.mainMenuItemGeneral",color:"#FFCC00",icon:"default-device-dashboard",path:"swag.training.authors.index",position:1}]})},M8Wn:function(e,t,a){},"T+xm":function(e,t,a){var i=a("M8Wn");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("SZ7m").default)("68da2382",i,!0,{})},"YY/3":function(e,t,a){var i=a("jpUq");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a("SZ7m").default)("38077030",i,!0,{})},eprr:function(e,t){e.exports='{% block author_listing %}\n    <sw-page class="author-listing">\n        <template #content>\n            <sw-card>\n                <h2>Author listing</h2>\n                <sw-entity-listing\n                        v-if="authors"\n                        ref="swagTrainingAuthorsAdministration"\n                        class="author-listing-grid"\n                        :repository="authorRepository"\n                        :items="authors"\n                        :columns="getGridColumns()"\n                        :fullPage="false"\n                        :isLoading="isLoading"\n                        detailRoute="swag.training.authors.form"\n                >\n                    <template #actions="{ item }">\n\n                        <sw-context-menu-item class="author-listing__author-edit-action"\n                                              :routerLink="{ name: \'swag.training.authors.form\', params: { id: item.id } }">\n                            {{ $tc(\'authors.listing.contextMenuEdit\') }}\n                        </sw-context-menu-item>\n                    </template>\n                </sw-entity-listing>\n            </sw-card>\n        </template>\n    </sw-page>\n{% endblock %}\n'},jpUq:function(e,t,a){}},[["FTGw","runtime","vendors-node"]]]);
